#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ull unsigned long long int
#define pb push_back
#define pf push_front
#define mp make_pair
#define fi first
#define se second
#define p(x) printf("%d\n", x)
#define pl(x) printf("%lld\n", x)
#define s(x) scanf("%f", &x)
#define sl(x) scanf("%lld", &x)
#define sf(x) scanf("%lf", &x)
#define bitcount __builtin_popcountll
#define INF 1e18+9
// #define int long long
#define l "\n"
#define pb push_back
#define lb lower_bound
#define ub upper_bound
#define vv vector<vector<int> > 
#define um unordered_map<int, int>
// #define m map<int,int>
class Solution {
private:
    int f(int ind, vector<int>& forts){
    int i = ind + 1;
    int cnt = 0;
    for(; i<forts.size(); i++){
      if(forts[i]==0){
        cnt++; continue;
      }
      else if(forts[i]==1){
        cnt=0; break;
      }
      else break;
    }
    return i == forts.size() ? 0 : cnt;
  }

  int f_1(int ind, vector<int>& forts){
    int i = ind - 1;
    int cnt=0;
    for(; i>=0; i--){
      if(forts[i]==0){
        cnt++; continue;
      }
      else if(forts[i]==1){
        cnt = 0;
        break;
      }
      else break;
    }
    return i<0 ?0 :cnt;
  }
public:
    int captureForts(vector<int>& forts) {
        int maxi = 0;
        for(int i=0; i<forts.size(); i++) {
            if(forts[i] == 1) {
                maxi = max(maxi, f(i, forts));
            }
        }
        for(int i=forts.size()-1; i>=0; i--) {
            if(forts[i] == 1) {
                maxi = max(maxi, f_1(i, forts));
            }
        }
        return maxi;
    }
};